diff -rupN CodeC/Makefile CodeC_FMupdate/Makefile
--- CodeC/Makefile	2002-10-04 10:57:44.000000000 -0500
+++ CodeC_FMupdate/Makefile	2014-02-03 15:55:32.000000000 -0600
@@ -6,7 +6,7 @@
 # Finkbeiner et al (1999) Galactic dust emission predictions.
 #
 # Compile everything with "make all", which will put the binaries in
-# the directory specified by $DEST.
+# the directory specified by $DESTDIR.
 #
 # This software is written to ANSI C specifications.  This is supported
 # on many platforms by the Gnu C compiler, which can be obtained via
@@ -25,28 +25,49 @@
 #   testf_thermal.f
 #------------------------------------------------------------------------------
 # Select destination directory for the binaries:
-DEST = ./
+#DESTDIR = ./
+
+# Select OS -- F. Menanteau
+UNAME_S := $(shell uname)
+
+DESTDIR = bin
 
 # COMPILE ON A SUN RUNNING SOLARIS
 # Use the gnu compilers (gcc,g77)
-#DEST = ../bin.sun4
-#CC = gcc
-#FC = g77
-#CFLAGS = -O2 -D__SUN
-#FFLAGS = -O3
+ifeq ($(UNAME_S),SunOS)
+  #DESTDIR = bin.SunOS
+  CC = gcc
+  FC = g77
+  CFLAGS = -O2 -D__SUN
+  FFLAGS = -O3
+endif
 
 # COMPILE ON AN x86 RUNNING LINUX
 # Use the gnu compilers (gcc,g77)
 # Note that Linux already defines LITTLE_ENDIAN
-DEST = ../bin.i686
-CC = gcc
-FC = g77
-CFLAGS = -O2 -D__LINUX
-FFLAGS = -O3
+ifeq ($(UNAME_S),Linux)
+   #DESTDIR = bin.Linux_x86_64
+   CC = gcc	
+   FC = g77
+   CFLAGS = -O2 -D__LINUX
+   FFLAGS = -O3
+endif
+
+# Felipe Menanteau, NCSA Oct 2013
+# COMPILE ON OSX 
+# Use the gnu compilers (gcc,g77)
+# Note that OSX requites LITTLE_ENDIAN !!!!
+ifeq ($(UNAME_S),Darwin)
+   #DESTDIR = bin.Darwin_x86_64
+   CC = gcc
+   FC = g77 
+   CFLAGS =  -O2 -D__OSX -arch i386 -arch x86_64 -DLITTLE_ENDIAN
+   FFLAGS =  -O3
+endif	
 
 # COMPILE ON A DEC ALPHA
 # Use the gnu compilers (gcc,g77)
-#DEST = ./
+#DESTDIR = ./
 #CC = gcc
 #FC = g77
 #CFLAGS = -O2 -DLITTLE_ENDIAN
@@ -56,7 +77,7 @@ FFLAGS = -O3
 # Use the native compilers (cc,f77) on SGI machines.
 # Alternatively, it seems that one can use the gcc compiler, but remove the
 # includes for <stdlib.h> from predict_thermal.c, dust_getval.c, subs_lambert.c
-#DEST = ../bin.iris4d
+#DESTDIR = ../bin.iris4d
 #CC = cc
 #FC = f77
 #CFLAGS = -O2
@@ -70,6 +91,11 @@ FFLAGS = -O3
 #CC = cc
 #CFLAGS = -xO2 -D__SUN
 
+# -----------------------------------------------------------------------------
+# Make the DESTDIR DIR - (Felipe Menanteau)
+makedir: 
+	mkdir -p $(DESTDIR)
+
 #------------------------------------------------------------------------------
 # Define C libraries:
 CLIBS = -lm
@@ -79,48 +105,51 @@ SIMPLEFITS = subs_fits.o subs_memory.o s
 
 simplefits:	$(SIMPLEFITS)
 
-lambert:	dust_getval lambert_getval predict_sync predict_thermal \
+lambert:     dust_getval lambert_getval predict_sync predict_thermal \
 	testf_lambert testf_sync testf_thermal
 
-all:	simplefits lambert
+all:	makedir simplefits lambert
+
+# Just dust_getval -- Added by Felipe Menanteau
+dust: makedir dust_getval
 
 #------------------------------------------------------------------------------
 # LAMBERT
 
 dust_getval: dust_getval.o subs_lambert.o subs_asciifile.o $(SIMPLEFITS)
-	$(CC) $(CFLAGS) -o $(DEST)/dust_getval dust_getval.o \
+	$(CC) $(CFLAGS) -o $(DESTDIR)/dust_getval dust_getval.o \
 	subs_lambert.o subs_asciifile.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 lambert_getval: lambert_getval.o subs_lambert.o $(SIMPLEFITS)
-	$(CC) $(CFLAGS) -o $(DEST)/lambert_getval lambert_getval.o \
+	$(CC) $(CFLAGS) -o $(DESTDIR)/lambert_getval lambert_getval.o \
 	subs_lambert.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 predict_sync: predict_sync.o subs_predict.o subs_lambert.o \
 	subs_asciifile.o $(SIMPLEFITS)
-	$(CC) $(CFLAGS) -o $(DEST)/predict_sync predict_sync.o \
+	$(CC) $(CFLAGS) -o $(DESTDIR)/predict_sync predict_sync.o \
 	subs_predict.o subs_lambert.o subs_asciifile.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 predict_thermal: predict_thermal.o subs_predict.o subs_lambert.o \
 	subs_asciifile.o $(SIMPLEFITS)
-	$(CC) $(CFLAGS) -o $(DEST)/predict_thermal predict_thermal.o \
+	$(CC) $(CFLAGS) -o $(DESTDIR)/predict_thermal predict_thermal.o \
 	subs_predict.o subs_lambert.o subs_asciifile.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 testf_lambert: testf_lambert.o subs_lambert.o $(SIMPLEFITS)
-	$(FC) $(FFLAGS) -o $(DEST)/testf_lambert testf_lambert.o \
+	$(FC) $(FFLAGS) -o $(DESTDIR)/testf_lambert testf_lambert.o \
 	subs_lambert.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 testf_sync: testf_sync.o subs_predict.o subs_lambert.o $(SIMPLEFITS)
-	$(FC) $(FFLAGS) -o $(DEST)/testf_sync testf_sync.o \
+	$(FC) $(FFLAGS) -o $(DESTDIR)/testf_sync testf_sync.o \
 	subs_predict.o subs_lambert.o \
 	$(SIMPLEFITS) $(CLIBS)
 
 testf_thermal: testf_thermal.o subs_predict.o subs_lambert.o $(SIMPLEFITS)
-	$(FC) $(FFLAGS) -o $(DEST)/testf_thermal testf_thermal.o \
+	$(FC) $(FFLAGS) -o $(DESTDIR)/testf_thermal testf_thermal.o \
 	subs_predict.o subs_lambert.o \
 	$(SIMPLEFITS) $(CLIBS)
 
diff -rupN CodeC/subs_common_string.h CodeC_FMupdate/subs_common_string.h
--- CodeC/subs_common_string.h	2000-07-14 15:16:34.000000000 -0500
+++ CodeC_FMupdate/subs_common_string.h	2013-10-31 18:06:10.000000000 -0500
@@ -4,9 +4,9 @@
 
 #include <stdio.h> /* Include for definition of FILE */
 
-int getline
+/*int getline
   (char  *  pLine,
-   int      max);
+   int      max);*/
 float sexagesimal_to_float
   (char  *  pTimeString);
 void trim_string
diff -rupN CodeC/subs_fits.c CodeC_FMupdate/subs_fits.c
--- CodeC/subs_fits.c	2000-07-14 15:16:34.000000000 -0500
+++ CodeC_FMupdate/subs_fits.c	2013-10-31 18:15:58.000000000 -0500
@@ -1140,7 +1140,7 @@ void fits_compute_axes_
    int      ival;
    DSIZE *  pNaxis;
    MEMSZ    memSize;
-   uchar    pLabel_temp[8];
+   uchar    pLabel_temp[9]; /* Felipe Menanteau avoids Abort on OSX*/
 
    fits_get_card_ival_(pNumAxes, label_naxis, pNHead, ppHead);
    if (*pNumAxes > 0) {
diff -rupN CodeC/subs_inoutput.h CodeC_FMupdate/subs_inoutput.h
--- CodeC/subs_inoutput.h	2000-07-14 15:16:34.000000000 -0500
+++ CodeC_FMupdate/subs_inoutput.h	2013-10-31 18:17:17.000000000 -0500
@@ -5,9 +5,9 @@
 #include <stdio.h> /* Include for definition of FILE */
 
 #define MAX_FILE_LINE_LEN 500 /* Maximum line length for data files */
-#define MAX_FILE_NAME_LEN  80
+#define MAX_FILE_NAME_LEN 256 /* Changed from 80 (Felipe Menanteau) */
 #define IO_FOPEN_MAX       20  /* Files must be numbered 0 to IO_FOPEN_MAX-1 */
-#define IO_FORTRAN_FL      80  /* Max length of file name from a Fortran call */
+#define IO_FORTRAN_FL     256  /* Max length of file name from a Fortran call Changed from 80 (Felipe Menanteau) */
 #define IO_GOOD             1
 #define IO_BAD              0
 
